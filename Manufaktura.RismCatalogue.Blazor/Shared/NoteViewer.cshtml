@using Manufaktura.Music.Model
@using Manufaktura.Controls.Model
@using Manufaktura.Controls.Rendering.Implementations
@using Manufaktura.RismCatalogue.Shared.Services


@inject ISettingsService settingsService;
@inject ScoreRendererService scoreRendererService;

@((MarkupString)RenderedScore)

@functions {
    [Parameter]
    Score Score { get; set; }

    [Parameter]
    RhythmicDuration CurrentRhythmicDuration { get; set; } = RhythmicDuration.Quarter;

    public string RenderedScore { get; set; }

    [JSInvokable]
    public void AddNote(int midiPitch)
    {
        var note = Note.FromMidiPitch(midiPitch, CurrentRhythmicDuration);
        Score.FirstStaff.Add(note);
        RenderedScore = scoreRendererService.RenderScore(Score);
        StateHasChanged();
    }

    protected override async Task OnInitAsync()
    {
        //await settingsService.InitializeAsync();
        RenderedScore = scoreRendererService.RenderScore(Score);

        await JSRuntime.Current.InvokeAsync<object>("registerNoteViewer", new DotNetObjectRef(this));
    }

}